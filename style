// --- Mobile Menu Functions ---

// Toggles the 'active' class on the navigation list and the hamburger icon
function toggleMenu() {
    const navLinks = document.getElementById('navLinks');
    const hamburger = document.querySelector('.hamburger');
    navLinks.classList.toggle('active');
    hamburger.classList.toggle('active');
}

// Closes the menu, typically called when a user clicks a link inside the menu
function closeMenu() {
    const navLinks = document.getElementById('navLinks');
    const hamburger = document.querySelector('.hamburger');
    navLinks.classList.remove('active');
    hamburger.classList.remove('active');
}

// --- Modal Functions ---
function openModal(type) {
    document.getElementById(type + 'Modal').classList.add('active');
}

function closeModal(type) {
    document.getElementById(type + 'Modal').classList.remove('active');
}

// --- FAQ Toggle ---
function toggleFAQ(element) {
    const item = element.parentElement;
    item.classList.toggle('active');
    const symbol = element.querySelector('span');
    symbol.textContent = item.classList.contains('active') ? 'âˆ’' : '+';
}

// --- Form Submission Handler (Uses localStorage for demo purposes) ---
function handleFormSubmit(event, type) {
    event.preventDefault();

    // Collect form data
    const formData = {};
    const form = event.target;
    const inputs = form.querySelectorAll('input, select, textarea');

    inputs.forEach(input => {
        // Use the input ID as the key in the formData object
        if (input.value) {
            formData[input.id] = input.value;
        }
    });

    // Log to console (In a real application, you would replace this with an API POST request)
    console.log('Form submitted:', type, formData);

    // Save data locally (using localStorage for persistence demo)
    const leads = JSON.parse(localStorage.getItem('axle_leads') || '[]');
    leads.push({
        type: type,
        timestamp: new Date().toISOString(),
        data: formData
    });
    localStorage.setItem('axle_leads', JSON.stringify(leads));

    // Display a custom message box instead of alert()
    displayMessageBox('Success', 'Thank you! We\'ve received your request (' + type.toUpperCase() + ') and will be in touch within 24 hours.', 'success');

    // Close modal and reset form
    closeModal(type);
    form.reset();
}

// Custom message box function (replacing alert())
function displayMessageBox(title, message, type) {
    const modal = document.createElement('div');
    modal.className = 'modal active';
    modal.onclick = (e) => {
        if (e.target.classList.contains('modal')) {
            document.body.removeChild(modal);
        }
    };
    
    // Use CSS variables defined in style.css for dynamic coloring
    let borderColor = type === 'success' ? 'var(--accent-turq)' : 'var(--error)';

    modal.innerHTML = `
        <div class="modal-content" style="border: 2px solid ${borderColor}; padding: 2rem; text-align: center;">
            <h3 style="color: var(--anchor-blue); margin-bottom: 1rem;">${title}</h3>
            <p style="margin-bottom: 1.5rem;">${message}</p>
            <button class="btn btn-primary" onclick="this.closest('.modal').remove()" style="background: ${borderColor};">Close</button>
        </div>
    `;
    document.body.appendChild(modal);
}

// Close modal when clicking outside (using window.onclick as a fallback)
window.onclick = function(event) {
    if (event.target.classList.contains('modal')) {
        event.target.classList.remove('active');
    }
}
